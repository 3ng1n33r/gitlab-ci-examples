stages:
  - build
  - deploy

build todofrontend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - changes:
      - todofrontend/**/*
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      /kaniko/executor
      --custom-platform=linux/amd64
      --context "${CI_PROJECT_DIR}/todofrontend"
      --dockerfile "${CI_PROJECT_DIR}/todofrontend/Dockerfile"
      --destination "${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/frontend/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHORT_SHA}"

build todobackend:
  stage: build
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  rules:
    - changes:
      - todobackend/**/*
  before_script:
    - mkdir -p /kaniko/.docker
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"username\":\"$CI_REGISTRY_USER\",\"password\":\"$CI_REGISTRY_PASSWORD\"}}}" > /kaniko/.docker/config.json
  script:
    - >-
      /kaniko/executor
      --custom-platform=linux/amd64
      --context "${CI_PROJECT_DIR}/todobackend"
      --dockerfile "${CI_PROJECT_DIR}/todobackend/Dockerfile"
      --destination "${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/backend/${CI_COMMIT_REF_SLUG}:${CI_COMMIT_SHORT_SHA}"

deploy todofrontend:
  stage: deploy
  image:
    name: c8h11no2/kubectl-helm:0.3
  rules:
    - changes:
      - todofrontend/**/*
  script:
    - kubectl config get-contexts
    - kubectl config use-context s045724/todoapp:primary-agent
    - helm upgrade --install $CI_PROJECT_NAME-frontend charts/todofrontend
        --set image.repository="${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/frontend/${CI_COMMIT_REF_SLUG}"
        --set image.tag="${CI_COMMIT_SHORT_SHA}"
        --set ingress.enabled=true
        --set "ingress.hosts[0].host=todoapp.lvh.me,ingress.hosts[0].paths[0].path=/,ingress.hosts[0].paths[0].pathType=ImplementationSpecific"
        --namespace todoapp
        --wait
        --timeout 300s
        --atomic
        --debug

deploy todobackend:
  stage: deploy
  image:
    name: c8h11no2/kubectl-helm:0.3
  rules:
    - changes:
      - todobackend/**/*
  variables:
    VAULT_VERSION: 1.15.5
    VAULT_ADDR: https://vault.default.svc.cluster.local:8200
    VAULT_SKIP_VERIFY: 'true'
    VAULT_AUTH_ROLE: todoapp-production
  id_tokens:
    VAULT_ID_TOKEN:
      aud: https://vault.default.svc.cluster.local:8200
  before_script:
    - apk add unzip --no-cache
    - curl -L https://hashicorp-releases.yandexcloud.net/vault/${VAULT_VERSION}/vault_${VAULT_VERSION}_linux_amd64.zip --output vault.zip
    - unzip vault.zip
    - mv vault /usr/local/bin/vault
    - vault version
  script:
    - export VAULT_TOKEN="$(vault write -field=token auth/jwt/login role=$VAULT_AUTH_ROLE jwt=$VAULT_ID_TOKEN)"
    - export DB_PASSWORD="$(vault kv get -field=db_password secret/todoapp/production/db)"
    - export DB_USERNAME="$(vault kv get -field=db_user secret/todoapp/production/db)"
    - export DB_NAME="$(vault kv get -field=db_name secret/todoapp/production/db)"
    - kubectl config get-contexts
    - kubectl config use-context s045724/todoapp:primary-agent
    - helm upgrade --install $CI_PROJECT_NAME-backend charts/todobackend
        --set image.repository="${CI_REGISTRY}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}/backend/${CI_COMMIT_REF_SLUG}"
        --set image.tag="${CI_COMMIT_SHORT_SHA}"
        --set ingress.enabled=true
        --set "ingress.hosts[0].host=todoapp.lvh.me,ingress.hosts[0].paths[0].path=/api,ingress.hosts[0].paths[0].pathType=ImplementationSpecific"
        --set env.DB_PG_NAME="${DB_NAME}"
        --set env.DB_PG_USER="${DB_USERNAME}"
        --set env.DB_PG_PASSWORD="${DB_PASSWORD}"
        --set env.DB_PG_HOST="postgres"
        --set env.DB_PG_PORT="5432"
        --namespace todoapp
        --wait
        --timeout 300s
        --atomic
        --debug
